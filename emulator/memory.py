from typing import List

from emulator.register import Register

class RAM:
    FONT_DATA = [
        [0xF0, 0x90, 0x90, 0x90, 0xF0], # 0
        [0x20, 0x60, 0x20, 0x20, 0x70], # 1
        [0xF0, 0x10, 0xF0, 0x80, 0xF0], # 2
        [0xF0, 0x10, 0xF0, 0x10, 0xF0], # 3
        [0x90, 0x90, 0xF0, 0x10, 0x10], # 4
        [0xF0, 0x80, 0xF0, 0x10, 0xF0], # 5
        [0xF0, 0x80, 0xF0, 0x90, 0xF0], # 6
        [0xF0, 0x10, 0x20, 0x40, 0x40], # 7
        [0xF0, 0x90, 0xF0, 0x90, 0xF0], # 8
        [0xF0, 0x90, 0xF0, 0x10, 0xF0], # 9
        [0xF0, 0x90, 0xF0, 0x90, 0x90], # A
        [0xE0, 0x90, 0xE0, 0x90, 0xE0], # B
        [0xF0, 0x80, 0x80, 0x80, 0xF0], # C
        [0xE0, 0x90, 0x90, 0x90, 0xE0], # D
        [0xF0, 0x80, 0xF0, 0x80, 0xF0], # E
        [0xF0, 0x80, 0xF0, 0x80, 0x80]  # F
    ]
    def __init__(self, size: int):
        self._container = [Register(1) for _ in range(size)]
        self._size = size

        self.__init_font(0x50)

    def get(self, index: int) -> int:
        assert index < self._size
        return self._container[index].get()
    
    def set(self, index: int, value: int) -> None:
        assert index < self._size
        self._container[index].set(value)

    def __init_font(self, start_location: int) -> None:
        current_location = start_location
        for char in RAM.FONT_DATA:
            for byte in char:
                self.set(current_location, byte)
                current_location += 1